{
    "contents" : "# housekeeping\nrm(list=ls())\n\n# libraries\nlibrary(klaR)\nlibrary(caret)\n\n# import data\n# http://www.portfolioprobe.com/user-area/documentation/portfolio-probe-cookbook/data-basics/read-a-tab-separated-file-into-r/\nwdat<-read.table('pubfig_dev_50000_pairs.txt')\n# v1 is label, rest (v2-v147) are features\nbigx<-wdat[,-c(1)] #drop col 1\nbigy<-as.factor(wdat[,1]) #coerce col 1 and store as factor (class label)\n\ntrscore<-array(dim=10)\ntestcore<-array(dim=10)\nfor (wi in 1:10) {\n  # partition 80% of data for training\n  wtd<-createDataPartition(y=bigy, p=.8, list=FALSE)\n  # run svm to generate model\n  svm<-svmlight(bigx[wtd,], bigy[wtd], pathsvm='/Users/harry/projects/aml/assignment3/')\n  \n  # run on training data\n  trlabels<-predict(svm, features[wtd,])\n  trfoo<-trlabels$class\n  # evaluate performance on training data\n  trscore<-sum(trfoo==bigy[wtd])/(sum(trfoo==bigy[wtd])+sum(!(trfoo==bigy[wtd])))\n  \n  # run on testing data (remaining 20%)\n  labels<-predict(svm, bigx[-wtd,])\n  foo<-labels$class\n  #evaluate performance on test data\n  testscore<-sum(foo==bigy[-wtd])/(sum(foo==bigy[-wtd])+sum(!(foo==bigy[-wtd])))\n}\ntrscoremean<-mean(trscore)\ntescoremean<-mean(tescore)\n",
    "created" : 1455591552035.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2191910350",
    "id" : "353B1D14",
    "lastKnownWriteTime" : 1455593616,
    "path" : "C:/Users/harry/projects/aml/assignment3/faces_svm.R",
    "project_path" : "faces_svm.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}